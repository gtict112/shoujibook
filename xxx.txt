 .\gradlew.bat app:dependencies
let module = Process.findModuleByName("libhelloworld.so");
// .rodata:0000000000000864 aHelloFromC     DCB "Hello from C++",0
let targetAddress = module.base.add(0x16A0);
Memory.protect(targetAddress, 0x10, '---');

Process.setExceptionHandler(function (details)
{
    if(details.type=="access-violation"){
        var operation = details.memory.operation;
        var memAddr = details.memory.address;
        console.log(DebugSymbol.fromAddress(details.context["pc"]))
        console.log("operation type:", operation);
        console.log("memory access addr:", memAddr);
        Memory.protect(targetAddress, 0x10, 'rwx');
    }
    return true;
});



Java.perform(() => {
    var StringClass = Java.use('java.lang.String'); // 使用 Java String 类
    var StandardCharsets = Java.use('java.nio.charset.StandardCharsets'); // 使用标准字符集类

    var myMethodHook = function(args) {
        try {
            // 将 args[3] 转换为 byte[]
            var byteArray = Java.cast(args[3], Java.array('byte')); // 强制转换为 byte[]

            // 使用 String(byte[], Charset) 构造 UTF-8 字符串
            var utf8String = StringClass.$new(byteArray, StandardCharsets.UTF_8.value);

            // 打印结果
            console.log("arg3:", utf8String);
        } catch (e) {
            console.error("Error decoding byte array:", e);
        }
    };

    // 示例，hook 你的目标方法
    var TargetClass = Java.use('your.target.ClassName'); // 替换为目标类
    TargetClass.targetMethod.implementation = function(...args) {
        myMethodHook(args);
        return this.targetMethod.apply(this, args);
    };
});
